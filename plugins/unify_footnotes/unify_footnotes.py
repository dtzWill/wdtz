'''
Copyright (c) 2015 Will Dietz

unify_footnotes

Plugin to find reference tables (generated by 'target-notes')
and unify them into a single HTML5-compliant block.
'''

import logging
from bs4 import BeautifulSoup, NavigableString

logger = logging.getLogger(__name__)


def unify_footnotes(content):
    '''
    Find footnote tables and unify them.
    '''
    if content is None:
        return None

    soup = BeautifulSoup(content, "lxml")
    soup.html.unwrap()
    soup.body.unwrap()

    footnote_tables = soup.findAll('table', class_="docutils footnote")

    # If no footnotes, nothing to do here
    if len(footnote_tables) == 0:
        return content

    # Gather footnotes into single div
    footnotes_div = soup.new_tag('div')
    footnotes_div['class'] = "footnote-table"

    # Insert into document tree before first footnote
    footnote_tables[0].insert_before(footnotes_div)

    # Generate code for each footnote
    for t in footnote_tables:
        # Gather information we want from the original entry
        f_id = t['id']
        f_label = t.find('td', class_='label')
        f_backrefs = t.find_all('a', class_='fn-backref')
        f_link = t.find('a', class_='reference')

        # For styling purposes (eek) make each footnote its own table for now.
        table = soup.new_tag('table', id=f_id)
        table['class'] = 'footnote'

        row = soup.new_tag('tr')

        # Canonicalize label text regardless of backref count
        label_text = f_label.text.strip('[]')
        label_text = '[' + label_text + ']'

        refs = soup.new_tag('td')
        refs['class'] = 'fn-backrefs'

        backref_text = 'â†©'
        # If single backref, caret is link to in-text location
        if len(f_backrefs) == 1:
            backref = f_backrefs[0]
            ref = soup.new_tag('a')
            ref['href'] = backref['href']
            ref['class'] = 'fn-backref'
            ref.append(backref_text)

            refs.append(ref)
        else:
            refs.append(backref_text)

            # Add backrefs after
            ref_list = soup.new_tag('span')
            ref_list['class'] = 'fn-backref-list'
            ref_list.append(' (')
            for idx, backref in enumerate(f_backrefs):
                ref = soup.new_tag('a')
                ref['href'] = backref['href']
                ref['class'] = 'fn-backref'
                ref.append(str(idx+1))

                ref_list.append(ref)
                if (idx+1 != len(f_backrefs)):
                    ref_list.append(", ")
            ref_list.append(')')

            refs.append(ref_list)

        label = soup.new_tag('td')
        label['class'] = 'label'
        label.append(label_text)

        link = soup.new_tag('td')
        link.append(f_link)

        row.append(soup.new_string('\n\t'))
        row.append(label)
        row.append(soup.new_string('\n\t'))
        row.append(refs)
        row.append(soup.new_string('\n\t'))
        row.append(link)
        row.append(soup.new_string('\n'))

        table.append(row)

        footnotes_div.append(soup.new_string('\n'))
        footnotes_div.append(table)

        # Remove extraneous whitespace after the table
        after = t.next_sibling
        if isinstance(after, NavigableString):
            after.replace_with(after.strip())

        # Remove original tbale
        t.decompose()

    footnotes_div.append(soup.new_string('\n'))

    return soup.decode()


def process(instance):
    '''
    Replace footnote references with unified table
    '''

    if hasattr(instance, '_content'):
        instance._content = unify_footnotes(instance._content)
